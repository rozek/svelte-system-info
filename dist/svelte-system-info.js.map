{"version":3,"file":"svelte-system-info.js","sources":["../src/svelte-system-info.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                             Svelte System Info                             //\n//----------------------------------------------------------------------------//\n\n  const UserAgent = {\n    Value:    window.navigator.userAgent,\n    contains: function contains (ValueToSearchFor:string):boolean {\n      return (this.Value.indexOf(ValueToSearchFor) >= 0)\n    },\n    lacks:    function lacks (ValueToSearchFor:string):boolean {\n      return (this.Value.indexOf(ValueToSearchFor) < 0)\n    },\n    match:    function match (Pattern:RegExp):any {\n      return this.Value.match(Pattern)\n    },\n    matches:  function matches (Pattern:RegExp):boolean {\n      return (this.Value.match(Pattern) != null)\n    },\n  }\n\n  /**** DeviceBrowserName ****/\n  // based on: https://github.com/keithws/browser-report\n\n    let DeviceBrowserName:string = '(n/a)'\n\n    if (UserAgent.contains('Trident') || UserAgent.contains('MSIE')) {\n      DeviceBrowserName = (UserAgent.contains('Mobile') ? 'IE Mobile' : 'Internet Explorer')\n    }\n\n    if (UserAgent.contains('Firefox') && UserAgent.lacks('Seamonkey')) {\n      DeviceBrowserName = (UserAgent.contains('Android') ? 'Firefox for Android' : 'Firefox')\n    }\n\n    if (\n      UserAgent.contains('Safari') && UserAgent.lacks('Chrome') &&\n      UserAgent.lacks('Chromium')  && UserAgent.lacks('Android')\n    ) {\n      DeviceBrowserName = (\n        UserAgent.contains('CriOS')\n        ? 'Chrome for iOS'\n        : (UserAgent.contains('FxiOS') ? 'Firefox for iOS' : 'Safari')\n      )\n    }\n\n    if (UserAgent.contains('Chrome')) {\n      if (UserAgent.matches(/\\bChrome\\/[.0-9]* Mobile\\b/)) {\n        DeviceBrowserName = (UserAgent.matches(/\\bVersion\\/\\d+\\.\\d+\\b/) || UserAgent.matches(/\\bwv\\b/)\n          ? 'WebView on Android'\n          : 'Chrome for Android'\n        )\n      } else {\n        DeviceBrowserName = 'Chrome'\n      }\n    }\n\n    if (\n      UserAgent.contains('Android') && UserAgent.lacks('Chrome')  &&\n      UserAgent.lacks('Chromium')   && UserAgent.lacks('Trident') &&\n      UserAgent.lacks('Firefox')\n    ) {\n      DeviceBrowserName = 'Android Browser'\n    }\n\n    if (UserAgent.contains('Edge')) {\n      DeviceBrowserName = 'Edge'\n    }\n\n    if (UserAgent.contains('UCBrowser')) {\n      DeviceBrowserName = 'UC Browser for Android'\n    }\n\n    if (UserAgent.contains('SamsungBrowser')) {\n      DeviceBrowserName = 'Samsung Internet'\n    }\n\n    if (UserAgent.contains('OPR') || UserAgent.contains('Opera')) {\n      DeviceBrowserName = (\n        UserAgent.contains('Opera Mini')\n        ? 'Opera Mini'\n        : (\n          UserAgent.contains('Opera Mobi') ||\n          UserAgent.contains('Opera Tablet') ||\n          UserAgent.contains('Mobile')\n          ? 'Opera Mobile'\n          : 'Opera'\n        )\n      )\n    }\n\n    if (UserAgent.contains('BB10') || UserAgent.contains('PlayBook') || UserAgent.contains('BlackBerry')) {\n      DeviceBrowserName = 'Blackberry'\n    }\n\n  /**** DeviceBrowserVersion ****/\n  // based on: https://github.com/keithws/browser-report\n\n    let VersionMatch\n      switch (DeviceBrowserName) {\n        case 'Chrome':\n        case 'Chrome for Android':\n        case 'WebView for Android':\n          VersionMatch = UserAgent.match(/Chrome\\/((\\d+\\.)+\\d+)/)\n          break\n        case 'Firefox':\n        case 'Firefox for Android':\n          VersionMatch = UserAgent.match(/Firefox\\/((\\d+\\.)+\\d+)/)\n          break\n        case 'Firefox for iOS':\n          VersionMatch = UserAgent.match(/FxiOS\\/((\\d+\\.)+\\d+)/)\n          break\n        case 'Edge':\n        case 'Internet Explorer':\n        case 'IE Mobile':\n          VersionMatch =\n            UserAgent.match(/Edge\\/((\\d+\\.)+\\d+)/) ||\n            UserAgent.match(/rv:((\\d+\\.)+\\d+)/)    ||\n            UserAgent.match(/MSIE\\ ((\\d+\\.)+\\d+)/)\n          break\n        case 'Safari':\n        case 'Android Browser':\n          VersionMatch = UserAgent.match(/Version\\/((\\d+\\.)+\\d+)/)\n        case 'UC Browser for Android':\n          VersionMatch = UserAgent.match(/UCBrowser\\/((\\d+\\.)+\\d+)/)\n        case 'Samsung Internet':\n          VersionMatch = UserAgent.match(/SamsungBrowser\\/((\\d+\\.)+\\d+)/)\n        case 'Opera Mini':\n          VersionMatch = UserAgent.match(/Opera Mini\\/((\\d+\\.)+\\d+)/)\n        case 'Opera':\n          VersionMatch =\n            UserAgent.match(/OPR\\/((\\d+\\.)+\\d+)/)     ||\n            UserAgent.match(/Version\\/((\\d+\\.)+\\d+)/) ||\n            UserAgent.match(/Opera\\/((\\d+\\.)+\\d+)/)\n        case 'BlackBerry':\n          VersionMatch = UserAgent.match(/Version\\/((\\d+\\.)+\\d+)/)\n        default:\n          VersionMatch = UserAgent.match(/\\/((\\d+\\.)+\\d+)$/)\n      }\n    let DeviceBrowserVersion = (VersionMatch && VersionMatch[1]) || '(n/a)'\n\n  /**** DeviceOSName ****/\n  // based on: https://github.com/keithws/browser-report\n\n    let DeviceOSName:string = '(n/a)'\n\n    if (UserAgent.contains('Windows')) {\n      DeviceOSName = (UserAgent.contains('Windows Phone') ? 'Windows Phone' : 'Windows')\n    }\n\n    if (UserAgent.contains('OS X') && UserAgent.lacks('Android')) {\n      DeviceOSName = 'macOS'\n    }\n\n    if (UserAgent.contains('Linux') && UserAgent.lacks('Android')) {\n      DeviceOSName = 'Linux'\n    }\n\n    if (UserAgent.contains('like Mac OS X') && UserAgent.contains('iPhone')) {\n      DeviceOSName = 'iOS'\n    }\n\n    if (UserAgent.contains('like Mac OS X') && UserAgent.contains('iPad')) {\n      let VersionMatch = UserAgent.match(/OS ((\\d+[._])+\\d+) like Mac OS\\ X/)\n      DeviceOSName = (parseInt(VersionMatch[1] || '',10) >= 13 ? 'iPadOS' : 'iOS')\n    }\n\n    if (\n      (UserAgent.contains('Android') || UserAgent.contains('Adr')) &&\n      UserAgent.lacks('Windows Phone')\n    ) {\n      DeviceOSName = 'Android'\n    }\n\n    if (UserAgent.contains('CrOS')) {\n      DeviceOSName = 'ChromeOS'\n    }\n\n    if (UserAgent.contains('BB10')) {\n      DeviceOSName = 'BlackBerry'\n    }\n\n    if (UserAgent.contains('RIM Tablet OS')) {\n      DeviceOSName = 'BlackBerry Tablet OS'\n    }\n\n    if (UserAgent.contains('BlackBerry')) {\n      DeviceOSName = 'BlackBerryOS'\n    }\n\n  /**** DeviceOSVersion ****/\n  // based on: https://github.com/keithws/browser-report\n\n    let DeviceOSVersion:string = '(n/a)'\n      switch (DeviceOSName) {\n        case 'Windows':\n        case 'Windows Phone':\n          if (UserAgent.contains('Win16')) {\n            DeviceOSVersion = '3.1.1'\n          } else if (UserAgent.contains('Windows CE')) {\n            DeviceOSVersion = 'CE'\n          } else if (UserAgent.contains('Windows 95')) {\n            DeviceOSVersion = '95'\n          } else if (UserAgent.contains('Windows 98')) {\n            DeviceOSVersion = (\n              UserAgent.contains('Windows 98; Win 9x 4.90')\n              ? 'Millennium Edition'\n              : '98'\n            )\n          } else {\n            VersionMatch = UserAgent.match(/Win(?:dows)?(?: Phone)?[\\ _]?(?:(?:NT|9x) )?((?:(\\d+\\.)*\\d+)|XP|ME|CE)\\b/)\n            if (VersionMatch && VersionMatch[1]) {\n              switch (VersionMatch[1]) {\n                case '10.0':\n                case '6.4':  DeviceOSVersion = '10.0';        break\n                case '6.3':  DeviceOSVersion = '8.1';         break\n                case '6.2':  DeviceOSVersion = '8';           break\n                case '6.1':  DeviceOSVersion = '7';           break\n                case '6.0':  DeviceOSVersion = 'Vista';       break\n                case '5.2':  DeviceOSVersion = 'Server 2003'; break\n                case '5.1':  DeviceOSVersion = 'XP';          break\n                case '5.01': DeviceOSVersion = '2000 SP1';    break\n                case '5.0':  DeviceOSVersion = '2000';        break\n                case '4.0':  DeviceOSVersion = '4.0';         break\n              }\n            }\n          }\n        case 'macOS':\n          VersionMatch = UserAgent.match(/OS X ((\\d+[._])+\\d+)\\b/)\n          break\n        case 'iOS':\n        case 'iPadOS':\n          VersionMatch = UserAgent.match(/OS ((\\d+[._])+\\d+) like Mac OS\\ X/)\n          break\n        case 'Android':\n          VersionMatch = UserAgent.match(/(?:Android|Adr) (\\d+([._]\\d+)*)/)\n          break\n        case 'ChromeOS':\n          VersionMatch = UserAgent.match(/(?:CrOS) [^ ]+ ((\\d+[._])+\\d+)/)\n          break\n        case 'BlackBerry':\n        case 'BlackBerryOS':\n          VersionMatch = UserAgent.match(/Version\\/((\\d+\\.)+\\d+)/)\n          break\n        case 'BlackBerry Tablet OS':\n          VersionMatch = UserAgent.match(/RIM Tablet OS ((\\d+\\.)+\\d+)/)\n          break\n      }\n    if (VersionMatch && VersionMatch[1]) {\n      DeviceOSVersion = VersionMatch[1].replace(/_/g,'.')\n    }\n\n  export default {\n    get BrowserName ()    { return DeviceBrowserName },\n    get BrowserVersion () { return DeviceBrowserVersion },\n    get OSName ()         { return DeviceOSName },\n    get OSVersion ()      { return DeviceOSVersion },\n  }\n\n"],"names":["VersionMatch","UserAgent","Value","window","navigator","userAgent","contains","ValueToSearchFor","this","indexOf","lacks","match","Pattern","matches","DeviceBrowserName","DeviceBrowserVersion","DeviceOSName","VersionMatch_1","parseInt","DeviceOSVersion","replace","BrowserName","BrowserVersion","OSName","OSVersion"],"mappings":"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"}